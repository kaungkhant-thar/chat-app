name: Build and Deploy to AWS

on:
  push:
    branches:
      - production

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_SERVER_REPO: ${{ secrets.AWS_ECR_SERVER_REPO }}
  ECR_WEB_REPO: ${{ secrets.AWS_ECR_WEB_REPO }}
  ECS_CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}
  ECS_SERVER_SERVICE: ${{ secrets.AWS_ECS_SERVER_SERVICE }}
  ECS_WEB_SERVICE: ${{ secrets.AWS_ECS_WEB_SERVICE }}
  ALB_DNS_NAME: ${{ secrets.ALB_DNS_NAME }}
  METERED_API_KEY: ${{ secrets.METERED_API_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Server Image
        run: |
          docker build --platform linux/amd64 --target server -t $ECR_SERVER_REPO:latest .
          docker push $ECR_SERVER_REPO:latest

      - name: Build & Push Web Image
        run: |
          docker build --platform linux/amd64 --target web \
            --build-arg NEXT_PUBLIC_API_URL=http://${ALB_DNS_NAME} \
            --build-arg NEXT_PUBLIC_METERED_API_KEY=${METERED_API_KEY} \
            -t $ECR_WEB_REPO:latest .
          docker push $ECR_WEB_REPO:latest

      - name: Deploy Server to ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVER_SERVICE \
            --force-new-deployment \
            --desired-count 1 \
            --region $AWS_REGION

      - name: Deploy Web to ECS
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_WEB_SERVICE \
            --force-new-deployment \
            --desired-count 1 \
            --region $AWS_REGION
